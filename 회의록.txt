2019182031 임윤수 010-8716-3060 : 기획
2019182006 김동재 010-2651-7105 : 서버
2019182023 양정우 010-2063-7620 : 클라/3D Graphics
정내훈 : 010-8964-9524

------------------
1. 게임
 - 12인 멀티플레이 FPS  => 3명팀이 4개
 - 언리얼5 : 독학으로 공부하는 것은 힘들고, 다른 학원출신과의 경쟁을 이기기 어렵다. 전공교수님의 지도를 받지 않는한 포트폴리오가 허름해진다. 취업이 힘들다.

2. 취업
 - 기획 : 포트폴리오가 정말 중요, 질도 중요하지만 양도 중요하다. 양은 기획서 페이지 수.
   * 졸작을 할 때 
      - 다른 게임에서는 볼 수 없는 창의적인 새로운 게임플레이를 만든다.
      - 방대한 양의 기획을 구현 한다.
      * 500페이지의 시나리오, 500종이 넘는 특색있는 몬스터, 1000개의 서로 연관된 퀘스트,  16종류의 직업 직업별 3가지 전문 분야 전문분야 별 10개의 스킬
    * 포트폴리오에는 졸작 말고도 다른 기획서를 추가 (기존 상용게임의 역기획서를 제작)
 - 그래픽 : 4년제 미대를 나온 학생과 경쟁을 해야 한다. 
   * 착각 : 3D Studio, Blender같은 툴들을 잘 다루는 사람을 우대할 것이라는 착각
      - 그래픽팀장의 면접 방식 : 포트폴리오를 본다. 종이와 펜을 주고 그려보라고 한다. => 본인이 만든 포트폴리오인지 10초면 알 수 있다.
           종이와 펜으로 그린 그림을 보면 재능을 알 수 있다. 재능이 있으면 (전문용어 : 간지가 느껴지면) 채용. 아니면 빠이~~~
       재능이 있으면 툴이야 1달 빡세게 굴리면 통달한다.
                         - by 김형태 
  - 서버 프로그래머 : 멀티쓰레드 프로그래밍, 네트워크 프로그래밍, 운영체제,   (C++, 컴퓨터구조, 자료구조), 코딩테스트
 - 3D 프로그래머
   * Vulkan을 하면 닥치고 취업

3. 진로를 생각해서 지도교수를 선택할 것.
 

2023-05-15
----------
1. 클라이언트 : DirectX (또는 벌칸)
2. 역할 분담
3. MO, 12명이 최대 4개팀으로 경쟁, 보물찾기와 탈출, PvP, PvE
4. SF, (Hunt showdown), APEX
5. 중점연구분야란?
 - 3가지 중에 하나를 하면 된다.
  * 그 어디서도 볼 수 없었던 독창적인 게임플레이 구현
  * 컨텐트의 양과 질로 승부
  * 학부 4학년이 1년동안에 해결할 수 있는 난이도의 기술적 요소 구현
 6. 할일
  - 중점연구분야 정하기 (12월 기획 발표까지)
  - 기획 문서 작성
  - DirectX 공부
  - 게임서버프로그래밍 공부
  - 현장실습
 - 팀이름 정하기
 7 다음 미팅
 - 6월 26일 월요일 오후 1시
 - 할일 하기

2023-06-26
----------
0. 임윤수 결석 (가정사정)
1. 벌칸으로 하겠다. (중점 연구 과제)
 - 방학동안 DX12를 공부하고 2학기에 벌칸을 시작해 보겠다.

2. 중점연구분야
 - 벌칸 클라이언트
 - Boost/ASIO 서버 => 이것도 괜찮음.
 - 기획은 아직 잘 모르겠음.
  * LUA를 사용한 NPC AI를 다른 팀도 많이 하는데... 제대로 하는 팀을 보지 못했음 <= 원인 : 보여줄 수 있는 뾰족한 아이디어가 없다.

3. 기획문서는 행방이 묘연하다.
 - email로 보낼것.

4. 현장실습 : EH만 바라보고 있는데, 큰일 났다. 겨울방학에 졸작 팽개치고 현장실습 들어야 할 듯.

5. 팀이름 : 김양김

6. 게임 장르 : APEX

7. 7월 한달 동안 할 일
 - DX를 사용해서 간단한 클라이언트 만들어 보기 : 
  * 평면에 랜덤한 위치에 원기둥이 50개 서있음.
  * WASD로 이동하면서 SPACE BAR를 누르면 총알이 나감
  * 화면 가운데 크로스헤어가 있고, 일치하면 원기둥이 사라짐
  * 화면 오른쪽 위에    "처치한 원기둥 수/50"이 표시됨.
 - 게임서버 프로그래밍 숙제 : LUA로 "Hello", "Bye" 표시하는 것
  * Boost/ASIO로 변환
 - 기획 : 기획문서 완성은 12월까지 하는 것이고, 일단 게임 소개/Stage 1 기획을 해올것.

8. 다음 미팅
 - 7월 24일 월요일 오후 1시
 - 위에 적힌 것 해오기.
 - GIT 프로젝트 만들기 : 지도교수 초대 zzapuno@hotmail.com
 * 프로젝트, 기획문서, 그래픽 Asset, 미팅일지, 작업일지, 포트폴리오 다 여기서 관리할 것임.
 

2023-07-24
-----------
1. 기획
 * 어떤 게임을 만들려고 하는지 한눈에 알아볼 수 있도록 잘 작성했음.
 * 기존 게임과 다른 참신한 요소가 부족하다.
   - 기믹이나 환풍구 같은 것들이 이미 다른 게임에 있는 것들임.
  - 12월 말까지 하나 만들어 보자.

2. 서버
 - BOOST/ASIO로 작성 하였음
 - 클라이언트 접속 종료시 서버가 죽는 문제
  * shared_ptr를 잘못 사용해서 발생하는 문제.
  * shared_ptr를 사용할 때는 다른 변수에 <<<복사>>>하고 nullptr인가를 체크한 다음에 사용해야 한다.
 * 위와 같이 해도 동접이 늘어나면 죽을 수 있다. 그래서 atomic_shared_ptr를 사용해야 한다.
 - TIMER에서 PQCS를 사용했는데, boost/asio에서는 어떻게 해야 하는가?
   * 다른 쓰레드에 넘기는 것은 어렵지 않음 : concurrent_queue를 사용하면 됨.
   * worker thread에 넘기는 방법이 있는가????
        https://stackoverflow.com/questions/8499847/how-to-write-an-anonymous-function-lambda-that-passes-itself-as-a-callback

3. 클라이언트 
 - 정육면체를 많이 그리고 커서키로 이동하는 프로그램 구현
 - 총알쏘는 것은 확인 불가
 - 문제 : 화면에 크로스헤어 그리는것,  문자 표시
 * Direct2D를 사용하는 것이 정석이지만... 우리는 Vulkan을 쓸 것이기 때문에 굳이 할 필요는 없음
  * Vulkan으로 넘어간 이후에 구현하자.
 - 커서 컨트롤은 Windows Programming영역인데 Vulkan에서는 보통 Windows Programming을 전혀 사용하지 않고 OpenGL쪽 라이브러를 사용해서 해결 (GLUT, freeGLUT, OpenGLFW.... )

4. ToDo
 - 기획 : 참신한 요소 생각해 오기 (중점 연구 과제에 해당)
   * 레벨디자인 해오기 (그림으로 그려도 되고, 유니티나 언리얼로 만들어도 되고)
 - 클라 :
  * 총쏴서 원기둥 날리기 
 * 조명, 그림자 넣기
 - 서버 :
  * Stress Test 해보기
  * shard_ptr에서 크래시가 날듯. atomic_shared_ptr를 사용해 볼것. (C++20에 있음)
  * timer에서 PQCS대신 timer callback으로 구현할 것.
5. 다음 미팅
 - 8월 28일 월요일 오후 1시

2023-08-23
----------
1. 기획
 - OK

2. 서버 :
 - 지금 크래시가 나는데, shared_ptr때문에 크래시가 나는가?
 - 아니다. lua_pop(L,1)을 하면 안되는데, 해서 죽는 것이다.
 - 스트레스 테스트 : 왜 delay계산을 안하는가? => 과부하가 걸리는데도 멈추지 않는다.
 - Release 모드로 하니 문제가 없다.

3. 클라
 -  엉터리를 가지고 왔음 (Win32 버전)

4. 다음미팅
 - 9월 11일 월요일 오후 7시
 - 기획 : (중점연구과제) 기존 게임과 다른 참신한 요소를 만들어 보자.
 - 서버
   * 스트레스테스트 고치기 (딜레이 넣어서 동접 측정)
  * 스트레스 테스트 프로그램을 죽였을 때 서버가 같이 죽으면 안된다. 수정 할 것
  * 스트레스 테스트 프로그램에서 로그인/로그아웃 반복기능 넣기 (플레이하는 사람이 들어오고 나가는 것을 시뮬레이션 하기, 1초에 100명 나가고 100명 새로들어오고)
 - 클라이언트 (DirectX12나 Vulkan에서) 
 * 총쏴서 원기둥 날리기 
 * 조명 (Directional Light 한개)

5. 현장실습해결


2023-09-11
-----------
1. 진행상황
 - 클라이언트 : Vulkan으로 처음부터 하겠다. (추천 책 : https://www.yes24.com/Product/Goods/55137611)
  * 간단한 튜토리얼 샘플 복붙한 것이라도 일단 무조건 올리고 볼것.
 - 기획
  * 전뇌코어를 통한 부활/완전 사망
  * 완전 사망을 통한 키카드 생성
  * 완전 사망시 NPC 속도 증가로 인한 페널티
 - 서버
  * 로그아웃시 오류
   - ASIO MICS에러  => Socket의 close()호출을 넣었더니 다른 에러로 변함
    * shared_ptr를 제대로 사용하지 않아서 발생하는 오류
    * shared_ptr로 객체를 관리할 경우, 다음과 같이 coding을 해야 한다,
         
            shared_ptr<OBJECT> obj_ptr = object_map[id];
       if (nullptr == obj_ptr)
          return;
       obj_ptr->method1();  // 작업.
       obj_ptr->method2();  // 작업.

       잘못된 프로그래밍
            object_map[id]->method1();
       object_map[id]->method2();
 
       
   - SYSTEM 10009에러 => Close된 소켓에 대한 접근 오류
    * 멀티쓰레드니까 다른 플레이어의 socket에 언제 close될지 알 수없고, close된 소켓에 대한 접근은 mutex를 빡세게 걸어 놓지 않으면 피할 수 없다.
    * 해결책 : Player 객체를 shared_ptr로 관리한다. 그리고, socket은 close하지 않는다.  shared_ptr로 객체를 관리하면 다른 쓰레드에서 socket에 접근할 떄 destructor가 호출된 소켓에 접근하는 것이 원천적으로 차단된다.
  - 

2.  ToDo
 - 클라이언트
  * Vulkan으로 WASD이동, 총쏴서 원기둥 날리기
 - 서버
  * 소켓 로그아웃관련 오류 없애기 (모든 소스를 뒤져서, shared_ptr사용 방법을 올바르게 고칠 것)
  * 스트레스 테스트에 1초에 100명 로그인/로그아웃 넣을 것
 - 기획
  * 기획 문서 보강
  * 보드게임으로 만들어 보자 (플레이 장면을 찍어서 포트폴리오에 넣을 수 있게)
  
3. 다음 미팅
 - 9월 25일 월요일 오후 7시
 - ToDo 해오기

2023-09-25
----------
1. 진행상황
 - 클라이언트 진행상황 없음
 - 기획 : 
 - 서버 : 
  * 동접 1초 100명 접속 100명 로그아웃 => 따로 자살특공대를 만들면 안되고, 기존의 연결들을 끊어야 한다.  동접 100명 이하일 때 문제가 생기는 것은 일정 동접 이상에서만 로그인/로그아웃이 기능하게 만들면 된다.
  * 10054오류는 원래 발생하는 오류. 서버에서 logout시켜주면 된다.
 

2. 중점연구과제
 - 서버 (BOOST/ASIO)
 - 클라 (벌칸)
 - 기획 (독창적인 컨텐츠)
2. ToDo
 - 10월 9일 월요일 오후 7시
 - 서버 : SFML 클라이언트에서 총쏴서 상대방 죽이는 것 구현 (상하좌우 4방향 발사), 스프라이트도 4방향이 구분되는 모델로 바꾸기, A키를 누르면 총알이 바라보고 있는 방향으로 나가서 플레이어를 맞추면 그 플레이어를 로그아웃 시킨다.
    * 총알의 사정거리는 10칸
    * 화면에 직선으로 표시 (플레이어와 희생자 사이에 직선을 긋기)
 - Vulkan으로 돌아가는 프로그램을 하나 만들어오기  (안돌아 가도 전체 프로젝트를 GIT에 올릴것 실제로 돌려보면서 에러를 찾자)
 - 보드게임은 최대한 간단하게 만들자.

2023-10-09
----------
1. 진행상황
 - 클라이언트 : Vulkan 네모가 그려진다.
 - 서버 : NPC에 총쏘기 구현, 멀티클라이언트 동기화
 - 기획 : 보드게임 제작, 무한 루프

2. ToDo
 - 11월 6일 월요일 오후 7시
 - 서버, 클라이언트 : SFML 클라이언트를 Vulkan 클라이언트로 바꾸기  (2차원 체스 땅바닥에서 정육면체 NPC들이 돌아다니고, 삼각기둥 플레이어가 돌아다니면서 총을 쏜다.  총알은 원기둥으로 표현된다.) 
 - 서버 : HP, 탄약 제한, 아이템 (물약, 탄약) 획득/자동사용,  아이템 리스폰. (서버에서 텍스트 메세지로 표시, 남은 탄약 개수, 체력, 아이템 획득 메시지)
 - 기획 : 맵제작 : 3D Max, 큐브하나와 통로 하나를 정성스럽게 제작하자.

3. 질문
 - VULKAN에서 window resize하면 죽는다. => Resize Call back 함수에서 swapchain을 재생성 해주어야 한다.

2023-11-06
----------
1. 진행상황
 - 클라이언트 Vulkan 공부를 완료 진도는 나간것이 없음.
 - 맵 제작 : 큐브 하나 제작 (25m X 25m X 25m)
 - 서버 구현 완료 : HP, 탄약 제한, 아이템 (물약, 탄약) 획득/자동사용,  아이템 리스폰. (서버에서 텍스트 메세지로 표시, 남은 탄약 개수, 체력, 아이템 획득 메시지)
2 중점연구과제
 - 클라이언트 : 벌칸
 - 서버 : Boost/ASIO
 - 기획 : 참신한 기획 (두뇌코어를 활용한 사망플레이어의 게임 참가)

3. ToDo
 - 11월 20일 월요일 오후 7시
 - 기획 : CELL 완성 (매터리얼 입히기), 기획 문서 업데이트
 - 클라이언트에 Map 로딩
   * 5 X 5 배치,  통로는 임시 제작 네모로 대체 
   * 맵에서 네모가 이동
 - 서버에 분쇄기 넣어서 이동시키기
  * 맵제작 PPT에 따라서 제작된 맵에서 이동시키기
  * 플레이어 충돌 체크.


2023-11-20
----------
1. 진행상황
 - 기획 : 방과 복도 모델링 (매터리얼 매핑은 안됨)
 - 클라이언트 : DirectX12, 모델로딩 안됨 => 유니티에서 Export가 안됨 (Size가 0인 파일이 생성됨) => 아마도 매터리얼이 없어서 오류가 난것이 아닐까 추측.
 - 서버 : 맵로딩과 충돌처리 완료

2. 중점연구과제
 - 클라이언트 : DirectX12, 부위별 충돌검사 : 부위별로 따로 Bounding Box를 두고 충돌 검사를 하겠다. => 너무 쉽다.
 - 서버 : Boost ASIO
 - 기획 : 참신한 기획 (두뇌코어를 활용한 사망플레이어의 게임 참가)

3. 다음 미팅
 - 12월 4일 월요일 오후 7시
 - 기획 : 방/복도 매터리얼 입히기
 - 클라이언트 : 방/복도 로딩  
                      중점연구과제 생각해 오기.
 - 서버 : 클라이언트 도와 주기

2023-12-04
-----------
1. 진행상황
 - 모델에 매터리얼 입히기 미완성
 - 클라이언트 모델 로딩 및 이동 구현 (텍스쳐 로딩 미구현)

2. 중점연구과제 
 - 클라이언트 : 파티클과 Object사이의 충돌 처리 : 문제는 없는데 다른 팀에서 너무 많이 써먹어서 식상하다.
    * 충돌 위치에 그을린 흔적 추가.
 - 서버 : Boost ASIO
 - 기획 : 참신한 기획 (두뇌코어를 활용한 사망플레이어의 게임 참가)

3. 다음미팅
 - 12월 18일 오후 7시 
 - 12월 26일 발표 PPT만들어 오기 (게임소개, 중점연구분야, 제작 스케줄, 구현한 내용 동영상)
 - 기획 : 방/복도 매터리얼 입히기
 - 클라이언트 : 방/복도 로딩
 - 서버 : 클라이언트 서버 연동 도와 주기
    * 클라이언트에서 할일 : 네트워크 API 제작
        * CreateObject(int object_type, int object_id, float x, float y, float z, int animation_id, float direction);
     * RemoveObject(int object_id);
      DisplayHitLocation(int object_id, float x, float y, float z)  => 파티클을 이 위치에 표시해라.
        * ChangeObjectLocation(int object_id, float x, float, y, float z, float direction);
      ChangeObjectAnimation(int object_id, int animation_id);
     GetAvatarInforation(float &x, float &y, float &z, float &direction);
     SetUIInfo (.........)
   * 클라이언트 프로그래머에게 제공해야 할 API
        FireGun(int fire_obj, float start_loc_x, float start_loc_y, float start_loc_z, float direction);

2023-12-18
----------
1. 기획 발표 PPT
 - 글자 어긋난 것들 수정
 - 발표 때 전뇌코어 활용/분쇄기/시체 휴대 개념을 설명하는 보조 슬라이드를 만들어 올것.

2. 진행상황
 - 클라이언트 모델 로딩 및 이동 구현 (텍스쳐 로딩 미구현)

3. 다음 미팅
 - 1월 8일 월요일 오후 5:30분
 - 기획 : 방/복도 매터리얼 입히기
 - 클라이언트 : 방/복도 매터리얼 로딩, 방 복도 모두 렌더링, 플레이어를 네모 박스로 렌더링
 - 서버 : 클라이언트 서버 연동 도와 주기
    * 클라이언트에서 할일 : 네트워크 API 제작
     * CreateObject(int object_type, int object_id, float x, float y, float z, int animation_id, float direction);
     * RemoveObject(int object_id);
     * DisplayHitLocation(int object_id, float x, float y, float z)  => 파티클을 이 위치에 표시해라.
     * ChangeObjectLocation(int object_id, float x, float, y, float z, float direction);
     * ChangeObjectAnimation(int object_id, int animation_id);
     * GetAvatarInforation(float &x, float &y, float &z, float &direction);
     * SetUIInfo (.........)
   * 클라이언트 프로그래머에게 제공해야 할 API
        FireGun(int fire_obj, float start_loc_x, float start_loc_y, float start_loc_z, float direction);

4. 서버 근본 구조
 - 하나의 서버프로그램이 여러개의 방을 동시 컨트롤 한다.
 - PLAN_A :  쓰레드 마다 자신들이 컨트롤 하는 방이 있고, 그 방에서 오는 모든 패킷은 그 쓰레드에서만 처리한다. asio::io_service가 쓰레드마다 별도로 존재, 상용서버는 이 방식을 사용한다.
  장 : 멀티쓰레드 프로그래밍이 필요 없다
    => timer_thread를 별도로 만들면 안된다. => 기껏 멀티쓰레드를 없앴는데, 이거 때문에 멀티쓰레드 프로그래밍을 다시 넣어야 한다.
    => ASIO의 timer_event를 사용해야 한다. => 1 micro second마다 호출하면 오버헤드가 너무 크다. 간격을 더 넓히도록
      간격을 넓히면 그것이 그대로 랙이 되어 돌아오므로, 사용자 입력의 쿨타임이나 캐스팅타임 처리는 별도 이벤트에서 시간에 맞춰서 처리하도록 해야 한다.
- PLAN_B : 모든 쓰레드가 공통으로 모든 방을 컨트롤 한다. 방에서 오는 패킷은 아무 쓰레드나 노는 쓰레드에서 처리한다.
  장 : 자동적인 로드 밸런싱

2024-01-08
-----------
1. 기획발표 통과 & 지적사항
 - 12인 시연은 어떻게?
  * 4명도 플레이 가능하게 제한을 풀 예정
  * 제안 : Auto 클라이언트 만들어서, 인원 수 늘리면 되지 않나?

2. 진행상황
 - 기획 : 방/복도 매터리얼 입히기
  * 입히기는 했는데 벼락치기로 입혀서, 클라이언트에 넣을 시간이 없었다.
 - 클라이언트 : 방/복도 매터리얼 로딩, 방 복도 모두 렌더링, 플레이어를 네모 박스로 렌더링
  * 안함.
 - 서버 : 클라이언트 서버 연동 도와 주기
  * Timer Thread 삭제 후, asio로 변환.

3. 중점연구과제 
 - 클라이언트 : 파티클과 Object사이의 충돌 처리 : 문제는 없는데 다른 팀에서 너무 많이 써먹어서 식상하다.
    * 충돌 위치에 그을린 흔적 추가.
 - 서버 : Boost ASIO
 - 기획 : 참신한 기획 (두뇌코어를 활용한 사망플레이어의 게임 참가) + 모델링 (시간이 모자라면 구입해서 사용할 것)

4. 스케줄
 ~ 1월 31일 까지 : 
   * 기본 적인 게임플레이 구현
   * 서버 연동/애니메이션까지 구현
   * 플레이어끼리 총쏴서 데미지 입히고 사망, 함정 2개 구현
   * 플레이어 1 모델링/애니메이션, 함정 2개 모델링 
 ~ 2월 29일 까지 :
   * 중점 연구과제 구현 (기본적인 실행)
   * Boost/ASIO : 모든 컨텐츠를 서버에서 구현 (아이템, 스킬, 전투), 이동만 클라이언트에서 구현
   * 파티클 구현
   * 애니메이션 구현, UI 구현
   * 플레이어 모든 애니메이션, 텍스쳐
   * 기획서 작성 (50페이지).
 ~ 1학기 :
   * 중점 연구과제 마무리
   * 서버 : 모든 컨텐츠 구현, 동접 측정, Auto 클라이언트 제작, 로비 시스템
   * 클라 : 파티클 마무리, 그림자
   * 기획서 완성 (100페이지, 배경, 컨셉아트, 시나리오, 게임플레이, 레벨디자인, 아이템/스킬.. , 졸작에 구현되지 않는 내용도 포함 가능)

5. 다음 미팅
 - 1월 22일 오후 5시 30분
 - 클라 : 
   * (1월 12일까지 해서 서버에게 전달) 네모 렌더링 & WASD 이동, 네트워크 API 구현
   * 텍스쳐 넣기
 - 서버 : 클라 연동
 - 기획 & 그래픽 : 벽&방 텍스쳐 입힌것 클라이언트에 전달 (1월 11일까지), 플레이어 모델링 + 애니메이션 (이동)


2024-01-22
-------------
0. 양정우 : 연락두절

1. 진행상황
 - 서버 연동
  *  위치이동을 서버로 전달 (완료)
  * 서버에서 받은 객체의 위치로 객체 이동 (해야 함)
 - 맵 텍스쳐링 완료, 플레이어 모델 제작

2.  ToDo
 - 함정 구현 (SFML)
  * 천장에서 레이저 : 위에서 아래로 레이저 발사: 1초에 한칸씩 이동, 옆방으로 대피 필요.
  * 분쇄기 : 정해진 경로를 이동하는 로봇 : 플레이어가 가까이 가면 쫒아온다. 접촉한 플레이어는 사망 
 - 토끼발과 탈출
 - 서버연동 마무리 하기.
 - 리깅과 걷기 애니메이션
 - 클라이언트 : 서버연동, 텍스쳐 입히기

3. 다음미팅
 - 2월 5일 월요일 오후 5시 30분

2024-02-05
------------
1. 진행상황
 - 클라이언트 : 
  * 서버연동 : 커넥트와 패킷전송이 되는데, 클라이언트에서 Object의 상태 변경이 잘 안됨.
 - 리깅과 애니메이션 
 - 서버 : 레이저 구현.

2. ToDo
 - 서버 연동 :  서버에게 만들어 줄 API => 다른 플레이어 객체, 다른 플레이어 객체를 담는 컨테이너, (다른 플레이어 객체를 생성하는 함수) 메소드 : 이동, 렌더, 애니메이션 세팅....
    * 클라이언트에서 할일 : 네트워크 API 제작
     * CreateObject(int object_type, int object_id, float x, float y, float z, int animation_id, float direction);
     * RemoveObject(int object_id);
     * DisplayHitLocation(int object_id, float x, float y, float z)  => 파티클을 이 위치에 표시해라.
     * ChangeObjectLocation(int object_id, float x, float, y, float z, float direction);
     * ChangeObjectAnimation(int object_id, int animation_id);
     * GetAvatarInforation(float &x, float &y, float &z, float &direction);
     * SetUIInfo (.........)
   * 클라이언트 프로그래머에게 제공해야 할 API
        FireGun(int fire_obj, float start_loc_x, float start_loc_y, float start_loc_z, float direction)

 - 클라이언트 : 텍스쳐 매핑, 애니메이션
 - 중점 연구 과제 : 시작
  * 클라이언트 : 파티클과 Object사이의 충돌 처리 : 문제는 없는데 다른 팀에서 너무 많이 써먹어서 식상하다.
    * 충돌 위치에 그을린 흔적 추가.
   => 중점 연구과제 할때가 아니고  서버연동 (0순위),  텍스쳐 매핑 (1순위), 애니메이션 (2순위)
 * 서버 : Boost ASIO => 그대로 진행 (멀티 방 구현)
 * 기획 : 참신한 기획 (두뇌코어를 활용한 사망플레이어의 게임 참가) + 모델링 (시간이 모자라면 구입해서 사용할 것) => 기획서 작성(세계관, 스토리)

3. 다음 미팅
 - 2월 19일 월요일 오후 5시 30분


2024-02-19
-------------
0. 김동재 코로나 결석
1. 진행상황
 - 서버연동 : 코로나로 딜레이
 - 텍스쳐 입히는 샘플프로그램을 실행해 봄
  * 모델러가 만든 모델이 출력되어야 함.
 2. ToDo
  - 서버연동 (0순위),  텍스쳐 매핑 (1순위), 애니메이션 (2순위)
   * 서버 연동은 
 - 기획서 작성 (세계관, 스토리, 맵, 아이템)
3. 다음 미팅
 - 3월 4일 오후 7시 5분
 - 작업일지 작성 : 팀별로 작성 (.hwp로 하지말고 WORD로 작성할 것)
