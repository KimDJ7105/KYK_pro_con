토끼발

else if (object_type == OT_RABBITFOOT)
{
	shared_ptr<MeshData> meshData2 = GET_SINGLE(Resources)->LoadBinaryModel(L"..\\Resources\\Binary\\Object.bin");

	vector<shared_ptr<GameObject>> gameObjects2 = meshData2->Instantiate();


	for (auto& gameObject : gameObjects2)
	{
		gameObject->SetName(L"RabbitFoot");
		gameObject->SetCheckFrustum(false);
		gameObject->GetTransform()->SetLocalPosition(aislePos);
		gameObject->GetTransform()->SetLocalScale(Vec3(50.f, 50.f, 50.f));
		gameObject->GetTransform()->SetLocalRotation(Vec3(-1.57f, 0.f, 0.f));
		gameObject->GetTransform()->SetObjectType(object_type);
		gameObject->GetTransform()->SetObjectID(object_ID);


		gameObject->AddComponent(make_shared<BoxCollider>());	// 바운딩 박스 생성

		std::dynamic_pointer_cast<BoxCollider>(gameObject->GetCollider())->SetExtents(Vec3(30.f, 30.f, 30.f));
		std::dynamic_pointer_cast<BoxCollider>(gameObject->GetCollider())->SetCenter(aislePos);

		//gameObject->GetMeshRenderer()->GetMaterial()->SetInt(0, 0);
		mainGameScene->AddGameObject(gameObject);
	}
}


//----------------------------------------------------------------

	//Rabbit Foot
	{
		shared_ptr<GameObject> sphere = make_shared<GameObject>();
		sphere->SetLayerIndex(GET_SINGLE(SceneManager)->LayerNameToIndex(L"UI")); // UI
		sphere->AddComponent(make_shared<Transform>());
		sphere->GetTransform()->SetLocalScale(Vec3(WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2, 500.f));
		sphere->GetTransform()->SetLocalPosition(Vec3(OUT_OF_RENDER, OUT_OF_RENDER, 500.f));
		shared_ptr<MeshRenderer> meshRenderer = make_shared<MeshRenderer>();
		{
			shared_ptr<Mesh> mesh = GET_SINGLE(Resources)->LoadRectangleMesh();
			meshRenderer->SetMesh(mesh);
		}
		{
			shared_ptr<Shader> shader = GET_SINGLE(Resources)->Get<Shader>(L"Texture");
			shared_ptr<Texture> texture = GET_SINGLE(Resources)->Load<Texture>(L"Map", L"..\\Resources\\Texture\\Rabbit_Foot.png");
			shared_ptr<Material> material = make_shared<Material>();
			material->SetShader(shader);
			material->SetTexture(0, texture);
			meshRenderer->SetMaterial(material);
		}
		sphere->AddComponent(meshRenderer);
		sphere->GetTransform()->SetObjectType(110);
		sphere->GetTransform()->SetObjectID(1);

		mainGameScene->AddGameObject(sphere);
	}


//----------------------------------------------------------------
void SetRabbitFootUI();

void SceneManager::SetRabbitFootUI()
{
	auto& gameObjects = GET_SINGLE(SceneManager)->GetActiveScene()->GetGameObjects();
	for (auto& gameObject : gameObjects)
	{
		if (gameObject->GetTransform()->GetObjectType() != 110)
			continue;
		if (gameObject->GetTransform()->GetObjectID() == 1)
		{
			Vec3 pos = gameObject->GetTransform()->GetLocalPosition();
			pos.x = -40;
			pos.y = 10 - (WINDOW_HEIGHT / 2) + (WINDOW_HEIGHT / (WINDOW_HEIGHT / 100));//이곳에 좌표 입력
			gameObject->GetTransform()->SetLocalPosition(pos);
		}
	}
}